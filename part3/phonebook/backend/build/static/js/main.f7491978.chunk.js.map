{"version":3,"sources":["components/Input.js","components/Form.js","components/Notification.js","components/Phonebook.js","services/persons.js","App.js","index.js"],"names":["Input","props","label","onChange","value","Form","onSubmit","onNameChange","newName","onNumChange","newNum","type","Notification","message","content","className","DeleteButton","onClick","Entry","person","name","number","handleClick","Phonebook","persons","map","key","id","baseUrl","axios","get","then","res","data","newPerson","post","put","delete","App","useState","setPersons","setNewName","setNewNum","search","setSearch","notification","setNotification","useEffect","personService","initialPersons","handleInputChange","setter","event","target","filteredPersons","filter","p","toLowerCase","includes","clearNotification","delay","setTimeout","preventDefault","existingPerson","find","window","confirm","returnedPerson","catch","error","response","status","updatePerson","concat","err","remainingPersons","e","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f7491978.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Input = (props) => (\n  <div>\n    {props.label}: <input onChange={props.onChange} value={props.value} />\n  </div>\n);\n\nexport default Input;\n","import React from \"react\";\nimport Input from \"./Input\";\n\nconst Form = (props) => (\n  <form onSubmit={props.onSubmit}>\n    <Input label=\"name\" onChange={props.onNameChange} value={props.newName} />\n    <Input label=\"number\" onChange={props.onNumChange} value={props.newNum} />\n    <div>\n      <button type=\"submit\">add</button>\n    </div>\n  </form>\n);\n\nexport default Form;\n","import React from \"react\";\n\nconst Notification = ({ message }) =>\n  message.content === null ? null : (\n    <div className={`notification ${message.type}`}>{message.content}</div>\n  );\n\nexport default Notification;\n","import React from \"react\";\n\nconst DeleteButton = (props) => <button onClick={props.onClick}>delete</button>;\n\nconst Entry = (props) => (\n  <p>\n    {props.person.name} {props.person.number}{\" \"}\n    <DeleteButton onClick={props.handleClick} />\n  </p>\n);\n\nconst Phonebook = (props) => {\n  return props.persons.map((person) => (\n    <Entry\n      key={person.id}\n      person={person}\n      handleClick={props.handleClick(person)}\n    />\n  ));\n};\n\nexport default Phonebook;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAllEntries = () => axios.get(baseUrl).then((res) => res.data);\n\nconst createEntry = (newPerson) =>\n  axios.post(baseUrl, newPerson).then((res) => res.data);\n\nconst updateEntry = (id, newPerson) =>\n  axios.put(`${baseUrl}/${id}`, newPerson).then((res) => res.data);\n\nconst deleteEntry = (id) =>\n  axios.delete(`${baseUrl}/${id}`).then((res) => res.data);\n\nexport default { getAllEntries, createEntry, updateEntry, deleteEntry };\n","import React, { useState, useEffect } from \"react\";\n\nimport Form from \"./components/Form\";\nimport Input from \"./components/Input\";\nimport Notification from \"./components/Notification\";\nimport Phonebook from \"./components/Phonebook\";\n\nimport personService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNum, setNewNum] = useState(\"\");\n  const [search, setSearch] = useState(\"\");\n  const [notification, setNotification] = useState({\n    content: null,\n    type: \"success\",\n  });\n\n  useEffect(() => {\n    personService\n      .getAllEntries()\n      .then((initialPersons) => setPersons(initialPersons));\n  }, []);\n\n  const handleInputChange = (setter) => (event) => setter(event.target.value);\n\n  const filteredPersons = persons.filter((p) =>\n    p.name.toLowerCase().includes(search.toLowerCase())\n  );\n\n  const clearNotification = (delay) =>\n    setTimeout(() => {\n      setNotification({ ...notification, content: null });\n    }, delay);\n\n  const addPerson = (newPerson) => {\n    personService\n      .createEntry(newPerson)\n      .then((returnedPerson) => {\n        setPersons(persons.concat(returnedPerson));\n        setNotification({\n          content: `Added ${returnedPerson.name}`,\n          type: \"success\",\n        });\n        clearNotification(1500);\n      })\n      .catch((err) => {\n        setNotification({\n          content: err.response.data.error,\n          type: \"error\",\n        });\n        clearNotification(1500);\n      });\n  };\n\n  const updatePerson = (id, person) => {\n    personService\n      .updateEntry(id, person)\n      .then((returnedPerson) => {\n        setPersons(persons.map((p) => (p.id !== id ? p : returnedPerson)));\n        setNotification({\n          content: `Updated ${returnedPerson.name}'s number`,\n          type: \"success\",\n        });\n        clearNotification(1500);\n      })\n      .catch((error) => {\n        setNotification({\n          content: error.response.data.error,\n          type: \"error\",\n        });\n        clearNotification(1500);\n        if (error.response.status === 404) {\n          setPersons(persons.filter((p) => p.id !== id));\n        }\n      });\n  };\n\n  const deletePerson = (person) => () => {\n    const isDeleteOk = window.confirm(`Delete ${person.name}?`);\n    if (isDeleteOk) {\n      personService\n        .deleteEntry(person.id)\n        .then((res) => {\n          const remainingPersons = persons.filter((p) => p.id !== person.id);\n          setPersons(remainingPersons);\n          setNotification({\n            content: `Deleted ${person.name} from server`,\n            type: \"success\",\n          });\n          clearNotification(1500);\n        })\n        .catch((e) => {\n          setNotification({\n            content: `Information of ${person.name} has already been removed from server`,\n            type: \"error\",\n          });\n          clearNotification(1500);\n          setPersons(persons.filter((p) => p.id !== person.id));\n        });\n    }\n  };\n\n  const addOrUpdatePerson = (event) => {\n    event.preventDefault();\n\n    const person = { name: newName, number: newNum };\n    const existingPerson = persons.find((p) => p.name === newName);\n\n    if (!existingPerson) {\n      addPerson(person);\n    } else {\n      const isUpdateOk = window.confirm(\n        `${newName} is already added to Phonebook, replace the old number with a new one?`\n      );\n      if (isUpdateOk) {\n        updatePerson(existingPerson.id, person);\n      }\n    }\n    setNewName(\"\");\n    setNewNum(\"\");\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification} />\n      <Input\n        label=\"filter shown with\"\n        onChange={handleInputChange(setSearch)}\n        value={search}\n      />\n      <h2>Add new</h2>\n      <Form\n        onSubmit={addOrUpdatePerson}\n        onNameChange={handleInputChange(setNewName)}\n        onNumChange={handleInputChange(setNewNum)}\n        newName={newName}\n        newNum={newNum}\n      />\n      <h2>Numbers</h2>\n      <Phonebook persons={filteredPersons} handleClick={deletePerson} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}