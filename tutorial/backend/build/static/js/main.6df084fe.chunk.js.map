{"version":3,"sources":["components/Footer.js","components/Note.js","components/Notification.js","services/notes.js","App.js","index.js"],"names":["Footer","style","color","fontStyle","fontSize","Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","request","axios","get","nonExisting","id","date","then","res","data","concat","newObject","post","put","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","key","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"yNAmBeA,EAjBA,WAOb,OACE,yBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,KAKR,6BACA,uGCDSC,EATF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBACtD,OACE,wBAAIC,UAAU,QACXJ,EAAKK,QADR,IACiB,4BAAQC,QAASL,GAAmBC,KCD1CK,EAHM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACP,OAAZA,EAAmB,KAAO,yBAAKJ,UAAU,SAASI,I,gBCkBrC,EAjBA,WACb,IAAMC,EAAUC,IAAMC,IAHR,cAIRC,EAAc,CAClBC,GAAI,IACJR,QAAS,mCACTS,KAAM,2BACNX,WAAW,GAEb,OAAOM,EAAQM,MAAK,SAACC,GAAD,OAASA,EAAIC,KAAKC,OAAON,OAShC,EANA,SAACO,GAAD,OACbT,IAAMU,KAdQ,aAcMD,GAAWJ,MAAK,SAACC,GAAD,OAASA,EAAIC,SAKpC,EAHA,SAACJ,EAAIM,GAAL,OACbT,IAAMW,IAAN,UAjBc,aAiBd,YAAwBR,GAAMM,GAAWJ,MAAK,SAACC,GAAD,OAASA,EAAIC,SCqE9CK,G,MA9EH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,MAJjC,mBAITO,EAJS,KAIKC,EAJL,KAMhBC,qBAAU,WACRC,IAAqBlB,MAAK,SAACmB,GAAD,OAAkBT,EAASS,QACpD,IAEH,IAuCMC,EAAcP,EAAUJ,EAAQA,EAAMY,QAAO,SAACpC,GAAD,OAAUA,EAAKG,aAElE,OACE,6BACE,qCACA,kBAAC,EAAD,CAAcK,QAASsB,IACvB,6BACE,4BAAQxB,QAAS,kBAAMuB,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGO,EAAYE,KAAI,SAACrC,GAAD,OACf,kBAAC,EAAD,CACEsC,IAAKtC,EAAKa,GACVb,KAAMA,EACNC,iBAAkB,kBAvDD,SAACY,GAC1B,IAAMb,EAAOwB,EAAMe,MAAK,SAACC,GAAD,OAAOA,EAAE3B,KAAOA,KAClC4B,EAAW,eAAQzC,EAAR,CAAcG,WAAYH,EAAKG,YAEhD8B,EACUpB,EAAI4B,GACX1B,MAAK,SAAC2B,GAAD,OACJjB,EAASD,EAAMa,KAAI,SAACrC,GAAD,OAAWA,EAAKa,KAAOA,EAAKb,EAAO0C,SAEvDC,OAAM,SAACC,GACNb,EAAgB,SAAD,OACJ/B,EAAKK,QADD,sCAGfwC,YAAW,WACTd,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAACI,GAAD,OAAOA,EAAE3B,KAAOA,SAuCViC,CAAmB9C,EAAKa,WAItD,0BAAMkC,SAvCM,SAACC,GACfA,EAAMC,iBAEN,IAAMC,EAAa,CACjB7C,QAASqB,EACTZ,MAAM,IAAIqC,MAAOC,cACjBjD,UAAWkD,KAAKC,SAAW,IAG7BrB,EAAmBiB,GAAYnC,MAAK,SAAC2B,GACnCjB,EAASD,EAAMN,OAAOwB,IACtBf,EAAW,SA6BT,2BAAO4B,MAAO7B,EAAS8B,SAzBJ,SAACR,GACxBrB,EAAWqB,EAAMS,OAAOF,UAyBpB,4BAAQG,KAAK,UAAb,SAEF,kBAAC,EAAD,SC/ENC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.6df084fe.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Footer = () => {\n  const footerStyle = {\n    color: \"green\",\n    fontStyle: \"italic\",\n    fontSize: 16,\n  };\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>\n        Note app, Department of Computer Science, University of Helsinki 2020\n      </em>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n  return (\n    <li className=\"note\">\n      {note.content} <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import React from \"react\";\n\nconst Notification = ({ message }) =>\n  message === null ? null : <div className=\"error\">{message}</div>;\n\nexport default Notification;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  const request = axios.get(baseUrl);\n  const nonExisting = {\n    id: 10000,\n    content: \"This note is not saved to server\",\n    date: \"2019-05-30T17:30:31.098Z\",\n    important: true,\n  };\n  return request.then((res) => res.data.concat(nonExisting));\n};\n\nconst create = (newObject) =>\n  axios.post(baseUrl, newObject).then((res) => res.data);\n\nconst update = (id, newObject) =>\n  axios.put(`${baseUrl}/${id}`, newObject).then((res) => res.data);\n\nexport default { getAll, create, update };\n","import React, { useState, useEffect } from \"react\";\n\nimport Footer from \"./components/Footer\";\nimport Note from \"./components/Note\";\nimport Notification from \"./components/Notification\";\n\nimport noteService from \"./services/notes\";\n\nimport \"./index.css\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    noteService.getAll().then((initialNotes) => setNotes(initialNotes));\n  }, []);\n\n  const toggleImportanceOf = (id) => {\n    const note = notes.find((n) => n.id === id);\n    const changedNote = { ...note, important: !note.important };\n\n    noteService\n      .update(id, changedNote)\n      .then((returnedNote) =>\n        setNotes(notes.map((note) => (note.id !== id ? note : returnedNote)))\n      )\n      .catch((error) => {\n        setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        );\n        setTimeout(() => {\n          setErrorMessage(null);\n        }, 5000);\n        setNotes(notes.filter((n) => n.id !== id));\n      });\n  };\n\n  const addNote = (event) => {\n    event.preventDefault();\n\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    };\n\n    noteService.create(noteObject).then((returnedNote) => {\n      setNotes(notes.concat(returnedNote));\n      setNewNote(\"\");\n    });\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}